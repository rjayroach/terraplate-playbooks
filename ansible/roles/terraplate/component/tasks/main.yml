---
- name: Manifest Values
  debug:
    var: manifest
    verbosity: 1

- name: Set spec from manifest values
  set_fact:
    spec: '{{ spec_b }}'
    # NOTE: relative_root_path is a workaround due to terragrunt's get_parent_tfvars_dir() does not properly map from the child dir to the parent dir
    relative_root_path: "{{ '../' * ( (spec_b.terraplate.component_dir.split('/') | length) - (spec_b.terraplate.root_dir.split('/') | length) ) }}"
  when: spec_b is defined
  ignore_errors: yes

- name: Manifest Values (if spec is not defined)
  debug:
    var: manifest
  when: spec is not defined

- name: Halt processing if error in manifest processing
  fail:
    msg: Play failed due to error in manifest processing. See manifest values above
  when: spec is not defined

- name: Spec Values
  debug:
    var: spec
    verbosity: 1

- name: Remove any existing files in the component output directory
  shell: '/bin/rm -rf {{ spec.terraplate.component_dir }}/*'
  when: spec.terraplate.monolithic_file_name is not defined

- name: Remove the existing component output directory
  file:
    path: '{{ spec.terraplate.component_dir }}/{{ spec.terraplate.monolithic_file_name }}.tf'
    state: absent
  when: spec.terraplate.monolithic_file_name is defined

- name: Create the output directories for the component
  file:
    name: '{{ spec.terraplate.component_dir }}'
    state: directory

- name: Template the application files
  include_role:
    name: terraplate/application

- name: Template the component terraform.tfvars file
  template:
    src: terraform.tfvars.j2
    dest: '{{ spec.terraplate.component_dir }}/terraform.tfvars'

- name: Template the component file including remote states
  blockinfile:
    create: yes
    dest: "{{ spec.terraplate.component_dir }}/{{ spec.terraplate.monolithic_file_name }}.tf"
    marker: '# {mark} component metadata'
    block: "{{ lookup('template', '_component.tf.j2') }}"

- name: Create the output directories for the component vars if needed
  file:
    name: '{{ spec.terraplate.component_vars_dir }}'
    state: directory

- name: Include artifact render tasks for each provider
  include_tasks: provider.yml
  with_items: '{{ manifest.providers }}'
  loop_control:
    loop_var: provider
  when: manifest.providers is defined
