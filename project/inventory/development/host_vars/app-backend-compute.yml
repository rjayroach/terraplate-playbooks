---
env_providers:
  - metadata:
      type: aws
      # credential: profile-name
    xdata_sources:
      - metadata:
          type: aws_ami
          profile: debian_stretch_latest
      - metadata:
          type: aws_ami
          name: ubuntu_trusty_latest
        arguments:
          filter:
            - name: name
              values: ['ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-*']
            - name: virtualization-type
              values: ['hvm']
          owners: ['099720109477']
    xresources:
      - metadata:
          type: aws_instance
          name: rails_server_0
          variables:
            amis: '{{ global_vars.amis.debian_stretch_latest }}'
        arguments:
          ami: ${lookup(var.aws_instance_rails_server_0_amis, "ap-southeast-1")}
  
      - metadata:
          type: aws_instance
          name: rails_server_1
        arguments:
          ami: ${data.aws_ami.debian_stretch_latest.id}
          subnet_id: ${data.terraform_remote_state.network.aws_subnet_dink_public_1_id}
          vpc_security_group_ids:
            - ${data.terraform_remote_state.security.aws_security_group_app_server_id}
          availability_zone: ap-southeast-1a
          tags: # Note: Tags can be associated to ansible roles for configuration after provisioning
            Name: This great Instance
            Environment: '{{ env.terraplate.tld }}'
            Role-rails-server: 'yes'
          key_name: '{{ config.playbooks.admin.compute.key_pairs[0].key_name }}'
          root_block_device:
            volume_size: '12'
        resources:
          - metadata:
              type: aws_eip
              name: main
            arguments:
              vpc: 'true'
  
    resources:
      - metadata:
          type: aws_elb
          name: main
        arguments:
          var: value
        resources:
          - metadata:
              type: aws_route53_record
              name: www
            arguments:
              name: 'www-{{ env.terraplate.tld }}.{{ config.playbooks.admin.dns.zones[0].name }}'
              zone_id: "${data.terraform_remote_state.dns.domain.aws_route53_zone_{{ config.playbooks.admin.dns.zones[0].name | replace('.', '-') }}_zone_id}"
              type: 'A'
  
    xresources:
      - metadata:
          type: aws_elb_attachment
          name: main
        arguments:
          instance: rails_server_1
          # This needs to expand to ${aws_elb.main.id}
          elb: main
  
      - metadata:
          type: aws_route53_record
          name: server_1
        arguments:
          name: 'server1-{{ env.terraplate.tld }}.{{ config.playbooks.admin.dns.zones[0].name }}'
          zone_id: "${data.terraform_remote_state.dns.domain.aws_route53_zone_{{ config.playbooks.admin.dns.zones[0].name | replace('.', '-') }}_zone_id}"
          type: 'A'
          records: ['${aws_eip.rails_server_1_eip.public_ip}']
