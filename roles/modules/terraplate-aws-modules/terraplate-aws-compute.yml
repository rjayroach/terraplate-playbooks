---
data_sources/aws_vpc/main:
  default: 'true' # get the regions's default vpc id for the security group

data_sources/aws_subnet/main:
  _definition:
    arguments:
      availability_zone:
        required: yes
  # availability_zone: ap-southeast-1a
  default_for_az: 'true' # get the az's default subnet id in order to launch the instance

data_sources/aws_ami/debian_stretch_latest:
  _metadata: 
    profile: debian_stretch_latest

resources/aws_security_group/app_server:
  description: app-server-security-group
  tags:
    Name: app-server
  vpc_id: data_sources/aws_vpc/main
  components:
    resources/aws_security_group_rule/allow_ssh_in:
      to_port: '22'
      type: ingress
      cidr_blocks: ['0.0.0.0/0']
    resources/aws_security_group_rule/allow_all_out:
      protocol: '-1'
      type: egress
      cidr_blocks: ['0.0.0.0/0']

resources/aws_instance/rails_server_1:
  _definition:
    arguments:
      key_name:
        variable: yes
  ami: data_sources/aws_ami/debian_stretch_latest
  subnet_id: data_sources/aws_subnet/main
  vpc_security_group_ids:
    - resources/aws_security_group/app_server
  tags: # Note: Tags can be associated to ansible roles for configuration after provisioning
    Name: This great Instance
  components:
    resources/aws_eip/rails_server_1:
      tags:
        Name: This great Instance

resources/aws_route53_record/rails_server_1:
  _definition:
    arguments:
      zone_id:
        variable: yes

  name: rails1
  # zone_id: data_sources/terraform_remote_state/admin_dns/c2p4_com
  # zone_id: replace me
  type: 'A'
  records:
    - resources/aws_eip/rails_server_1
