---
- include_tasks: setup.yml
  when: false

- name: Ensure a valid project name
  fail:
    msg: Project name must be set
  when: project_name | length == 0

- name: Check if a project alredy exists
  stat:
    path: '{{ project_dir }}'
  register: project_status

- name: Quit if a project already exists
  fail:
    msg: Project already exists
  when: project_status.stat.exists

- name: Create project directory structure
  file:
    path: '{{ item }}'
    state: directory
  with_items:
    - '{{ project_dir }}/inventory/host_vars'
    - '{{ project_dir }}/action_plugins'

- name: Copy the project base files
  copy:
    src: '{{ role_path }}/files/'
    dest: '{{ project_dir }}'

- name: Copy common files to the project
  copy:
    src: "{{ role_path.split('/')[0:-3] | join('/') }}/{{ item }}"
    dest: '{{ project_dir }}/{{ item }}'
  with_items:
    - terraplate.yml
    - action_plugins/prompt.py

- name: Set the project's terraplate playbook to executable
  file:
    path: '{{ project_dir }}/terraplate.yml'
    mode: 0755

- name: Generate an inventory file for localhost
  copy:
    content: "terraplate ansible_connection=local\n"
    dest: '{{ project_dir }}/inventory/hosts'

- name: Template host_vars/terraplate.yml
  template:
    src: terraplate.yml.j2
    dest: '{{ project_dir }}/inventory/host_vars/terraplate.yml'

- name: Generate the project's vault password
  copy:
    content: "{{ 999999999999999999999 | random | string + (lookup('pipe', 'date +%s%N')) | to_uuid }}"
    dest: '{{ project_dir }}/.vault-password.txt'

- name: Softlink to the roles directory
  file:
    src: ../../roles
    path: '{{ project_dir }}/roles'
    state: link

- name: Initialize the project's git repository
  command: '{{ item }}'
  args:
    chdir: '{{ project_dir }}'
  with_items:
    - git init
    - git add .
    - git commit -m 'first commit'
