{% import 'helpers.j2' as h -%}

{%- macro render_header(render_type, spec) -%}
---
modules/{{ spec.terraplate.module.provider_name }}/{{ spec.terraplate.module.name }}:
  source: {{ spec.terraplate.module.target_dir.split('/')[1:] | join('/') }}
{%- endmacro %}

{%- macro render_manifest(key, component, parent_key, template_data) %}
  {% set default_definition = {'type': 'string', 'required': False, 'description': 'not found', 'reference_from': {}} %}
  {% for name, definition in component._definition.arguments.iteritems() %}
    {% set definition = default_definition | combine(definition, recursive=True) %}
    {% if definition.variable is defined %}
      {% if definition.variable %}
  {{ h.variable_name(key, name) }}: "${var.{{ h.variable_name(key, name) }}}"
      {% else %}
        {# do nothing #}
      {% endif %}
    {% elif definition.required %}
  {{ h.variable_name(key, name) }}: {{ h.default_value_p(component[name] | default(''), definition) }}
    {% else %}
  # {{ h.variable_name(key, name) }}: {{ h.default_value_p(component[name] | default(''), definition) }}
    {% endif %}
  {% endfor %}
{{ caller() }}
{%- endmacro %}


{%- macro render_variables(key, component, parent_key, template_data) -%}
  {% set default_definition = {'type': 'string', 'required': False, 'description': 'not found', 'variable': False, 'reference_from': {}} %}
  {% for name, definition in component._definition.arguments.iteritems() %}
    {% set definition = default_definition | combine(definition, recursive=True) %}
    {% if definition.variable %}
  {{ h.variable_name(key, name) }}: {{ h.default_value_p(component[name] | default('')) }}
    {% endif %}
  {% endfor %}
{{ caller() }}
{%- endmacro %}
